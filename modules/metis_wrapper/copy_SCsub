#!/usr/bin/env python

Import("env")
Import("env_modules")

env_metis = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

thirdparty_gklib_dir = "#thirdparty/"

#thirdparty_gklib_sources = [ "C:\src\GodotProjects\godot\thirdparty\METIS\libmetis\gklib.c"]

thirdparty_dir = "#thirdparty/METIS/libmetis/"

thirdparty_sources = [
    "auxapi.c",
    "balance.c",
    "bucketsort.c",
    "checkgraph.c",
    "coarsen.c",
    "compress.c",
    "contig.c",
    "debug.c",
    #"defs.h",
    "fm.c",
    "fortran.c",
    "frename.c",
    "gklib.c",
    #"gklib_defs.h",
    #"gklib_rename.h",
    "graph.c",
    "initpart.c",
    "kmetis.c",
    "kwayfm.c",
    "kwayrefine.c",
    #"macros.h",
    "mcutil.c",
    "mesh.c",
    "meshpart.c",
    #"metislib.h",
    "minconn.c",
    "mincover.c",
    "mmd.c",
    "ometis.c",
    "options.c",
    "parmetis.c",
    "pmetis.c",
    #"proto.h",
    "refine.c",
    #"rename.h",
    "separator.c",
    "sfm.c",
    "srefine.c",
    "stat.c",
    #"stdheaders.h",
    #"struct.h",
    "timing.c",
    "util.c",
    "wspace.c",
]

thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env_thirdparty = env_metis.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources) #"#thirdparty/METIS/*.c")
env.modules_sources += thirdparty_obj
env_metis.Append(CPPPATH=["include"])

# Godot source files

module_obj = []

env_metis.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
